# Base image with C++ build tools
FROM ubuntu:22.04 AS builder

# Avoid interactive prompts during installation
ENV DEBIAN_FRONTEND=noninteractive

# Install only the dependencies needed for p2p_client
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    libboost-system-dev \
    libboost-thread-dev \
    libboost-chrono-dev \
    libboost-program-options-dev \
    libssl-dev \
    libprotobuf-dev \
    protobuf-compiler \
    libtorrent-rasterbar-dev \
    nlohmann-json3-dev \
    # qtbase5-dev \
    && rm -rf /var/lib/apt/lists/*

# Set up working directory
WORKDIR /app

# Copy source code
COPY . .

# Build only p2p_client
RUN rm -rf build && \
    mkdir -p build && \
    cd build && \
    cmake .. && \
    make -j$(nproc) p2p_client

# Create a smaller runtime image
FROM ubuntu:22.04

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libboost-system1.74.0 \
    libboost-thread1.74.0 \
    libboost-chrono1.74.0 \
    libboost-program-options1.74.0 \
    libtorrent-rasterbar2.0 \
    libprotobuf23 \
    # libqt5core5a \
    # libqt5gui5 \
    # libqt5widgets5 \
    && rm -rf /var/lib/apt/lists/*

# Set up working directory
WORKDIR /app

# Create directories for torrents and downloads
RUN mkdir -p /app/torrents /app/downloads

# Copy the built executable from the builder stage
COPY --from=builder /app/build/p2p_client .
COPY --from=builder /app/config.json /app/

# Expose the default client port
EXPOSE 6881 7881 8881

# Run the client
ENTRYPOINT ["./p2p_client"]
CMD ["--port", "6881", "--env", "aws"]