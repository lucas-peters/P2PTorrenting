services:
  client1:
    image: lucaspeters/client
    container_name: client1
    networks:
      p2p-network:
        ipv4_address: 172.20.0.10
    ports:
      - "6881:6881"
      - "7881:7881"
      - "8881:8881"
    restart: unless-stopped
    volumes:
      - ./client1_data:/app/data
      - ./client1_torrents:/app/torrents
      - ./client1_downloads:/app/downloads
    environment:
      - GOSSIP_HOST=172.20.0.10
      - PUBLIC_IP=${PUBLIC_IP:-172.20.0.10}
    command: --port 6881 --env aws --ip ${PUBLIC_IP:-172.20.0.10}
    stdin_open: true
    tty: true

  client2:
    image: lucaspeters/client
    container_name: client2
    networks:
      p2p-network:
        ipv4_address: 172.20.0.11
    ports:
      - "6882:6882"
      - "7882:7882"
      - "8882:8882"
    restart: unless-stopped
    volumes:
      - ./client2_data:/app/data
      - ./client2_torrents:/app/torrents
      - ./client2_downloads:/app/downloads
    environment:
      - GOSSIP_HOST=172.20.0.11
      - PUBLIC_IP=${PUBLIC_IP:-172.20.0.11}
    command: --port 6882 --env aws --ip ${PUBLIC_IP:-172.20.0.11}
    stdin_open: true
    tty: true

  client3:
    image: lucaspeters/client
    container_name: client3
    networks:
      p2p-network:
        ipv4_address: 172.20.0.12
    ports:
      - "6883:6883"
      - "7883:7883"
      - "8883:8883"
    restart: unless-stopped
    volumes:
      - ./client3_data:/app/data
      - ./client3_torrents:/app/torrents
      - ./client3_downloads:/app/downloads
    environment:
      - GOSSIP_HOST=172.20.0.12
      - PUBLIC_IP=${PUBLIC_IP:-172.20.0.12}
    command: --port 6883 --env aws --ip ${PUBLIC_IP:-172.20.0.12}
    stdin_open: true
    tty: true

  client4:
    image: lucaspeters/client
    container_name: client4
    networks:
      p2p-network:
        ipv4_address: 172.20.0.13
    ports:
      - "6884:6884"
      - "7884:7884"
      - "8884:8884"
    restart: unless-stopped
    volumes:
      - ./client4_data:/app/data
      - ./client4_torrents:/app/torrents
      - ./client4_downloads:/app/downloads
    environment:
      - GOSSIP_HOST=172.20.0.13
      - PUBLIC_IP=${PUBLIC_IP:-172.20.0.13}
    command: --port 6884 --env aws --ip ${PUBLIC_IP:-172.20.0.13}
    stdin_open: true
    tty: true

  client5:
    image: lucaspeters/client
    container_name: client5
    networks:
      p2p-network:
        ipv4_address: 172.20.0.14
    ports:
      - "6885:6885"
      - "7885:7885"
      - "8885:8885"
    restart: unless-stopped
    volumes:
      - ./client5_data:/app/data
      - ./client5_torrents:/app/torrents
      - ./client5_downloads:/app/downloads
    environment:
      - GOSSIP_HOST=172.20.0.14
      - PUBLIC_IP=${PUBLIC_IP:-172.20.0.14}
    command: --port 6885 --env aws --ip ${PUBLIC_IP:-172.20.0.14}
    stdin_open: true
    tty: true

networks:
  p2p-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16